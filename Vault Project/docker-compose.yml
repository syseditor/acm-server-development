
services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - keycloak_network

  keycloak:
    user: "root"
    image: quay.io/keycloak/keycloak:latest
    command: start-dev
    environment:
      KC_HOSTNAME_URL: https://acm-2.csd.auth.gr:8443
      KC_HTTPS_CERTIFICATE_FILE: /etc/letsencrypt/live/acm-2.csd.auth.gr/fullchain.pem  # Mounted cert
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/letsencrypt/live/acm-2.csd.auth.gr/privkey.pem
      KC_HTTP_ENABLED: false
      KC_HTTPS_ENABLED: true
      #KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTPS_PORT: 8443
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8443:8443"
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak_network
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt:ro

#  nginx:
#    image: nginx:latest
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#      - /etc/letsencrypt:/etc/letsencrypt:ro
#    ports:
#      - "8443:443"
#    depends_on:
#      - keycloak
#      - pgadmin
#    networks:
#      - keycloak_network

  pgadmin:
    user: "root" #temp
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      #PGADMIN_LISTEN_ADDRESS
      PGADMIN_ENABLE_TLS: "True"
      PGADMIN_LISTEN_PORT: 5443  # Use HTTPS port
      PGADMIN_SSL_CERTIFICATE: /certs/server.cert
      PGADMIN_SSL_PRIVATE_KEY: /certs/server.key
    ports:
      - "5443:5443"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - /etc/letsencrypt/live/acm-2.csd.auth.gr/fullchain.pem:/certs/server.cert
      - /etc/letsencrypt/live/acm-2.csd.auth.gr/privkey.pem:/certs/server.key
      - /etc/letsencrypt/:/etc/letsencrypt:ro
    depends_on:
      - postgres
    networks:
      - keycloak_network

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    container_name: mailserver
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: acm-2.csd.auth.gr
    ports: #25 smtp, 143 unsecure imap
      - "587:587" #secure smtp -> plain smtp -> tls via startls
      - "465:465" #direct smtp
      - "993:993" #encrypted imap
    volumes:
      - ./docker-data/dms/mail-data/:/var/mail/
      - ./docker-data/dms/mail-state/:/var/mail-state/
      - ./docker-data/dms/mail-logs/:/var/log/mail/
      - ./docker-data/dms/config/:/tmp/docker-mailserver/
      - /etc/localtime:/etc/localtime:ro
      - /etc/letsencrypt/:/etc/letsencrypt:ro
    environment:
      - ENABLE_FAIL2BAN=1
      - SSL_TYPE=letsencrypt # For ssl certs
      - ENABLE_IMAP=1
      - ENABLE_POP3=0
      #- ENABLE_SPAMASSASSIN=1 #Alt to rspamd
      #- ENABLE_POSTGREY=1 #For greylisting, not now
      - DMS_DEBUG=1
      - LOG_LEVEL=debug
      - SUPERVISOR_LOGLEVEL=info
      - PERMIT_DOCKER=connected-networks # Allow keycloak and other containers to send mail
      - SPOOF_PROTECTION=0
      - ENABLE_RSPAMD=1 # Check incoming mail for spam 
      - ENABLE_CLAMAV=1 # Antivirus for incoming mail
      # Security - After handling dns records
      #- ENABLE_OPENDKIM=1
      #- ENABLE_OPENDMARC=1
      #- ENABLE_POLICYD_SPF=1
      # Postfix
      - POSTFIX_INET_PROTOCOLS=ipv4
    cap_add:
      - NET_ADMIN # For Fail2Ban to work 
    restart: always
    networks:
      - keycloak_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  keycloak_network:
    driver: bridge
